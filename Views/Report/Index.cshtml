@{
    ViewBag.Title = "Report - Bike Store Management";
}

<!-- Chart.js CDN -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"></script>

<!-- Summernote WYSIWYG Editor -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/summernote.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/summernote.min.js"></script>

<style>
    .report-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 20px;
    }

    .report-section {
        border: 2px solid #ccc;
        padding: 20px;
        margin-bottom: 20px;
        background-color: #f9f9f9;
        border-radius: 5px;
    }

    .report-content {
        background-color: white;
        padding: 30px;
        border: 1px solid #ddd;
        margin-bottom: 20px;
        border-radius: 5px;
    }

    .chart-container {
        margin: 30px 0;
        padding: 20px;
        background-color: white;
        position: relative;
        height: 450px;
    }

    .data-table {
        margin-top: 20px;
        overflow-x: auto;
    }

        .data-table table {
            width: 100%;
            border-collapse: collapse;
        }

        .data-table th, .data-table td {
            border: 1px solid #ddd;
            padding: 12px 15px;
            text-align: left;
        }

        .data-table th {
            background-color: #007bff;
            color: white;
            font-weight: bold;
        }

        .data-table tr:nth-child(even) {
            background-color: #f9f9f9;
        }

    .save-options {
        display: flex;
        gap: 15px;
        align-items: center;
        margin-top: 15px;
        padding: 15px;
        background-color: #e9ecef;
        border-radius: 4px;
        flex-wrap: wrap;
    }

    .archive-section {
        margin-top: 30px;
        border: 2px solid #ccc;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 5px;
    }

    .archive-list {
        border: 2px solid #ccc;
        padding: 15px;
        background-color: white;
        min-height: 200px;
        max-height: 500px;
        overflow-y: auto;
        border-radius: 5px;
    }

    .archive-item {
        padding: 15px;
        background-color: #f8f9fa;
        margin-bottom: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .archive-item-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 10px;
    }

    .archive-item-actions {
        display: flex;
        gap: 10px;
    }

    .archive-item-description {
        margin-top: 10px;
        padding: 10px;
        background-color: white;
        border: 1px solid #ddd;
        border-radius: 4px;
        display: none;
    }

    .description-editor {
        margin-top: 20px;
        padding: 15px;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .summary-stats {
        display: flex;
        gap: 20px;
        margin: 20px 0;
        flex-wrap: wrap;
    }

    .stat-box {
        flex: 1;
        min-width: 200px;
        padding: 15px;
        background: #007bff;
        color: white;
        border-radius: 8px;
    }

    .stat-value {
        font-size: 32px;
        font-weight: bold;
    }

    .stat-label {
        font-size: 14px;
    }
</style>

<div class="report-container">
    <h2>Sales Report</h2>

    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage as string))
    {
        <div class="alert alert-danger">
            @ViewBag.ErrorMessage
        </div>
    }

    <!-- Report Display Section -->
    <div class="report-section">
        <h3>Popular Products Report</h3>

        <div class="report-content" id="reportContent">
            <h4>Top 10 Most Popular Bicycle Products</h4>
            <p>Report Generated: <span id="reportDate"></span></p>

            <!-- Summary Statistics -->
            <div class="summary-stats">
                <div class="stat-box">
                    <div class="stat-value" id="totalOrdersValue">0</div>
                    <div class="stat-label">Total Orders (Top 10)</div>
                </div>
                <div class="stat-box">
                    <div class="stat-value" id="avgOrdersValue">0</div>
                    <div class="stat-label">Avg Orders per Product</div>
                </div>
            </div>

            <!-- Chart Container -->
            <div class="chart-container">
                <canvas id="reportChart"></canvas>
            </div>

            <!-- Data Table -->
            <div class="data-table">
                <table id="reportTable">
                    <thead>
                        <tr>
                            <th>Rank</th>
                            <th>Product Name</th>
                            <th>Brand</th>
                            <th>Category</th>
                            <th>Total Orders</th>
                        </tr>
                    </thead>
                    <tbody id="reportTableBody">
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Save Options -->
        <div class="save-options">
            <label>Filename:</label>
            <input type="text" id="reportFileName" value="BikeStoreReport" class="form-control" style="width: 250px;">

            <label>File Type:</label>
            <select id="reportFileType" class="form-control" style="width: 150px;">
                <option value="html">HTML</option>
                <option value="txt">Text</option>
            </select>

            <button type="button" id="saveReportBtn" class="btn btn-primary">Save Report</button>
        </div>

        <!-- Description Editor (Bonus Feature) -->
        <div class="description-editor">
            <h5>Add Description (Optional - Bonus Feature)</h5>
            <div id="descriptionEditor"></div>
        </div>
    </div>

    <!-- Document Archive Section -->
    <div class="archive-section">
        <h3>Document Archive</h3>
        <div class="archive-list" id="archiveList">
            @if (ViewBag.SavedFiles != null && ViewBag.SavedFiles.Count > 0)
            {
                foreach (var file in ViewBag.SavedFiles)
                {
                    <div class="archive-item">
                        <div class="archive-item-header">
                            <div>
                                <strong>@file.FileName</strong><br />
                                <small>Size: @((file.FileSize / 1024.0).ToString("F2")) KB | Created: @file.CreatedDate.ToString("yyyy-MM-dd HH:mm")</small>
                            </div>
                            <div class="archive-item-actions">
                                <button class="btn btn-sm btn-info view-description" data-filename="@file.FileName">View Description</button>
                                <button class="btn btn-sm btn-success download-file" data-filename="@file.FileName">Download</button>
                                <button class="btn btn-sm btn-danger delete-file" data-filename="@file.FileName">Delete</button>
                            </div>
                        </div>
                        <div class="archive-item-description"></div>
                    </div>
                }
            }
            else
            {
                <p style="text-align: center; padding: 40px; color: #999;">No saved reports</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Get report data from server
        var reportData = @Html.Raw(ViewBag.ReportData ?? "[]");
        var reportChart = null;

        $(document).ready(function () {
            console.log("Report data:", reportData);

            // Check if we have data
            if (!reportData || reportData.length === 0) {
                alert("No report data available. Please ensure there are orders in the database.");
                return;
            }

            // Initialize Summernote editor
            $('#descriptionEditor').summernote({
                height: 200,
                placeholder: 'Enter description...'
            });

            // Set report date
            $('#reportDate').text(new Date().toLocaleString());

            // Calculate statistics
            var totalOrders = 0;
            for (var i = 0; i < reportData.length; i++) {
                totalOrders += reportData[i].Value;
            }
            var avgOrders = (totalOrders / reportData.length).toFixed(2);

            $('#totalOrdersValue').text(totalOrders);
            $('#avgOrdersValue').text(avgOrders);

            // Populate table
            var tableBody = $('#reportTableBody');
            tableBody.empty();

            for (var i = 0; i < reportData.length; i++) {
                var item = reportData[i];
                var row = '<tr>' +
                    '<td>' + (i + 1) + '</td>' +
                    '<td>' + item.Label + '</td>' +
                    '<td>' + item.Brand + '</td>' +
                    '<td>' + item.Category + '</td>' +
                    '<td>' + item.Value + '</td>' +
                    '</tr>';
                tableBody.append(row);
            }

            // Create Chart
            var ctx = document.getElementById('reportChart');
            if (ctx) {
                ctx = ctx.getContext('2d');

                var labels = [];
                var data = [];
                var colors = [];

                for (var i = 0; i < reportData.length; i++) {
                    labels.push(reportData[i].Label);
                    data.push(reportData[i].Value);
                    var hue = (i * 360 / reportData.length);
                    colors.push('hsl(' + hue + ', 70%, 60%)');
                }

                reportChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Number of Orders',
                            data: data,
                            backgroundColor: colors
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
            }

            // Save Report
            $('#saveReportBtn').click(function () {
                var fileName = $('#reportFileName').val().trim() || 'Report';
                var fileType = $('#reportFileType').val();
                var description = $('#descriptionEditor').summernote('code');

                // Build simple HTML report
                var reportHtml = '<html><head><title>' + fileName + '</title>';
                reportHtml += '<style>body{font-family:Arial;margin:20px;}table{width:100%;border-collapse:collapse;}';
                reportHtml += 'th,td{border:1px solid #ddd;padding:8px;}th{background:#007bff;color:white;}</style>';
                reportHtml += '</head><body>';
                reportHtml += '<h1>Bike Store Sales Report</h1>';
                reportHtml += '<p>Generated: ' + new Date().toLocaleString() + '</p>';
                reportHtml += '<h2>Top 10 Products</h2>';
                reportHtml += '<table><tr><th>Rank</th><th>Product</th><th>Brand</th><th>Category</th><th>Orders</th></tr>';

                for (var i = 0; i < reportData.length; i++) {
                    reportHtml += '<tr>';
                    reportHtml += '<td>' + (i + 1) + '</td>';
                    reportHtml += '<td>' + reportData[i].Label + '</td>';
                    reportHtml += '<td>' + reportData[i].Brand + '</td>';
                    reportHtml += '<td>' + reportData[i].Category + '</td>';
                    reportHtml += '<td>' + reportData[i].Value + '</td>';
                    reportHtml += '</tr>';
                }

                reportHtml += '</table></body></html>';

                $.ajax({
                    url: '@Url.Action("SaveReport", "Report")',
                    type: 'POST',
                    data: {
                        fileName: fileName,
                        fileType: fileType,
                        reportHtml: reportHtml,
                        description: description
                    },
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error("Save error:", error);
                        alert('Error saving report: ' + error);
                    }
                });
            });

            // View Description
            $('.view-description').click(function () {
                var fileName = $(this).data('filename');
                var $item = $(this).closest('.archive-item');
                var $descDiv = $item.find('.archive-item-description');

                if ($descDiv.is(':visible')) {
                    $descDiv.slideUp();
                } else {
                    $.ajax({
                        url: '@Url.Action("GetFileDescription", "Report")',
                        type: 'GET',
                        data: { fileName: fileName },
                        dataType: 'json',
                        success: function(data) {
                            if (data.success && data.description) {
                                $descDiv.html(data.description).slideDown();
                            } else {
                                $descDiv.html('<em>No description</em>').slideDown();
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('Error loading description:', error);
                            $descDiv.html('<em>Error loading description</em>').slideDown();
                        }
                    });
                }
            });

            // Download File
            $('.download-file').click(function () {
                var fileName = $(this).data('filename');
                window.location.href = '@Url.Action("DownloadFile", "Report")?fileName=' + encodeURIComponent(fileName);
            });

            // Delete File
            $('.delete-file').click(function () {
                var fileName = $(this).data('filename');
                if (confirm('Delete this file?')) {
                    $.ajax({
                        url: '@Url.Action("DeleteFile", "Report")',
                        type: 'POST',
                        data: { fileName: fileName },
                        success: function (response) {
                            if (response.success) {
                                alert(response.message);
                                location.reload();
                            } else {
                                alert('Error: ' + response.message);
                            }
                        },
                        error: function(xhr, status, error) {
                            alert('Error: ' + error);
                        }
                    });
                }
            });
        });
    </script>
}