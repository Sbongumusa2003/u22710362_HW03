@model u22710362_HW03.Models.HomeViewModel

@{
    ViewBag.Title = "Maintain - Bike Store Management";
}

<style>
    .section-container {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
    }

    .section-box {
        flex: 1;
        border: 2px solid #ccc;
        padding: 15px;
        background-color: #f9f9f9;
    }

        .section-box h4 {
            margin-top: 0;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 2px solid #333;
        }

    .form-row {
        display: flex;
        gap: 10px;
        margin-bottom: 10px;
        align-items: center;
    }

        .form-row label {
            flex: 0 0 100px;
            margin: 0;
        }

        .form-row input,
        .form-row select {
            flex: 1;
        }

    .list-box {
        border: 1px solid #999;
        padding: 10px;
        min-height: 150px;
        max-height: 200px;
        overflow-y: auto;
        background-color: white;
        margin-top: 10px;
    }

        .list-box ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .list-box li {
            padding: 5px 0;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }

            .list-box li:hover {
                background-color: #f0f0f0;
            }

            .list-box li.selected {
                background-color: #e3f2fd;
            }

    .pagination {
        display: flex;
        gap: 5px;
        margin-top: 10px;
        justify-content: flex-start;
        flex-wrap: wrap;
    }

        .pagination button {
            padding: 5px 10px;
            border: 1px solid #999;
            background-color: white;
            cursor: pointer;
            min-width: 35px;
        }

            .pagination button:hover:not(:disabled) {
                background-color: #f0f0f0;
            }

            .pagination button.active {
                background-color: #007bff;
                color: white;
                border-color: #007bff;
            }

            .pagination button:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

    .action-buttons {
        display: flex;
        gap: 10px;
        margin-top: 15px;
    }

    .product-details {
        display: flex;
        gap: 20px;
    }

    .product-form {
        flex: 1;
    }

    .product-image {
        flex: 0 0 200px;
        border: 1px solid #999;
        height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
        overflow: hidden;
    }

        .product-image img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }

        .product-image .placeholder-text {
            color: #999;
            font-style: italic;
        }

    .dropdown-label {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 15px;
    }

    .page-info {
        font-size: 12px;
        color: #666;
        margin-top: 5px;
    }
</style>

<div class="container-fluid mt-4">
    <h2>Maintain</h2>

    @Html.AntiForgeryToken()

    <div class="section-container">
        <!-- Staff Section -->
        <div class="section-box">
            <div class="dropdown-label">
                <h4>Staff Management</h4>
            </div>

            <div class="form-row">
                <label>First Name</label>
                <input type="text" class="form-control form-control-sm" id="maintain_staff_first_name">
            </div>
            <div class="form-row">
                <label>Last Name</label>
                <input type="text" class="form-control form-control-sm" id="maintain_staff_last_name">
            </div>
            <div class="form-row">
                <label>Staff ID</label>
                <input type="text" class="form-control form-control-sm" id="maintain_staff_id" readonly>
            </div>
            <div class="form-row">
                <label>Email</label>
                <input type="text" class="form-control form-control-sm" id="maintain_staff_email">
            </div>
            <div class="form-row">
                <label>Phone</label>
                <input type="text" class="form-control form-control-sm" id="maintain_staff_phone">
            </div>
            <div class="form-row">
                <label>Active</label>
                <select class="form-select form-select-sm" id="maintain_staff_active">
                    <option value="1">Yes</option>
                    <option value="0">No</option>
                </select>
            </div>
            <div class="form-row">
                <label>Store</label>
                <select class="form-select form-select-sm" id="maintain_staff_store">
                    @foreach (var store in ViewBag.Stores)
                    {
                        <option value="@store.store_id">@store.store_name</option>
                    }
                </select>
            </div>

            <div class="list-box">
                <ul id="maintainStaffList"></ul>
            </div>

            <div class="page-info" id="staffPageInfo">Page 1 of 1</div>
            <div class="pagination" id="staffPagination"></div>

            <div class="action-buttons">
                <button class="btn btn-sm btn-primary" id="updateStaffBtn">Update</button>
                <button class="btn btn-sm btn-danger" id="deleteStaffBtn">Delete</button>
            </div>
        </div>

        <!-- Customers Section -->
        <div class="section-box">
            <div class="dropdown-label">
                <h4>Customer Management</h4>
            </div>

            <div class="form-row">
                <label>First Name</label>
                <input type="text" class="form-control form-control-sm" id="maintain_customer_first_name">
            </div>
            <div class="form-row">
                <label>Last Name</label>
                <input type="text" class="form-control form-control-sm" id="maintain_customer_last_name">
            </div>
            <div class="form-row">
                <label>Customer ID</label>
                <input type="text" class="form-control form-control-sm" id="maintain_customer_id" readonly>
            </div>
            <div class="form-row">
                <label>Email</label>
                <input type="text" class="form-control form-control-sm" id="maintain_customer_email">
            </div>
            <div class="form-row">
                <label>Phone</label>
                <input type="text" class="form-control form-control-sm" id="maintain_customer_phone">
            </div>
            <div class="form-row">
                <label>City</label>
                <input type="text" class="form-control form-control-sm" id="maintain_customer_city">
            </div>

            <div class="list-box">
                <ul id="maintainCustomerList"></ul>
            </div>

            <div class="page-info" id="customerPageInfo">Page 1 of 1</div>
            <div class="pagination" id="customerPagination"></div>

            <div class="action-buttons">
                <button class="btn btn-sm btn-primary" id="updateCustomerBtn">Update</button>
                <button class="btn btn-sm btn-danger" id="deleteCustomerBtn">Delete</button>
            </div>
        </div>

        <!-- Products Section -->
        <div class="section-box">
            <div class="dropdown-label">
                <h4>Product Management</h4>
            </div>

            <div class="product-details">
                <div class="product-form">
                    <div class="form-row">
                        <label>Product Name</label>
                        <input type="text" class="form-control form-control-sm" id="maintain_product_name">
                    </div>
                    <div class="form-row">
                        <label>Model Year</label>
                        <input type="number" class="form-control form-control-sm" id="maintain_product_year">
                    </div>
                    <div class="form-row">
                        <label>Price</label>
                        <input type="number" step="0.01" class="form-control form-control-sm" id="maintain_product_price">
                    </div>
                    <div class="form-row">
                        <label>Brand</label>
                        <select class="form-select form-select-sm" id="maintain_product_brand">
                            @foreach (var brand in ViewBag.Brands)
                            {
                                <option value="@brand.brand_id">@brand.brand_name</option>
                            }
                        </select>
                    </div>
                    <div class="form-row">
                        <label>Category</label>
                        <select class="form-select form-select-sm" id="maintain_product_category">
                            @foreach (var category in ViewBag.Categories)
                            {
                                <option value="@category.category_id">@category.category_name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="product-image" id="productImageContainer">
                    <span class="placeholder-text">Select a product</span>
                </div>
            </div>

            <div class="list-box" style="margin-top: 15px;">
                <ul id="maintainProductList"></ul>
            </div>

            <div class="page-info" id="productPageInfo">Page 1 of 1</div>
            <div class="pagination" id="productPagination"></div>

            <div class="action-buttons">
                <button class="btn btn-sm btn-primary" id="updateProductBtn">Update</button>
                <button class="btn btn-sm btn-danger" id="deleteProductBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var selectedStaffId = null;
            var selectedCustomerId = null;
            var selectedProductId = null;

            // Pagination data - serialize only needed properties
            var staffData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                Model.Staffs.Select(s => new {
                    staff_id = s.staff_id,
                    first_name = s.first_name,
                    last_name = s.last_name,
                    email = s.email,
                    phone = s.phone,
                    active = s.active,
                    store_id = s.store_id,
                    stores = new { store_name = s.stores != null ? s.stores.store_name : "N/A" }
                }).ToList()
            ));

            var customerData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                Model.Customers.Select(c => new {
                    customer_id = c.customer_id,
                    first_name = c.first_name,
                    last_name = c.last_name,
                    email = c.email,
                    phone = c.phone,
                    city = c.city,
                    street = c.street,
                    state = c.state,
                    zip_code = c.zip_code
                }).ToList()
            ));

            var productData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                Model.Products.Select(p => new {
                    product_id = p.product_id,
                    product_name = p.product_name,
                    brand_id = p.brand_id,
                    brand_name = p.brands != null ? p.brands.brand_name : "N/A",
                    category_id = p.category_id,
                    category_name = p.categories != null ? p.categories.category_name : "N/A",
                    model_year = p.model_year,
                    list_price = p.list_price
                }).ToList()
            ));

            var staffCurrentPage = 1;
            var customerCurrentPage = 1;
            var productCurrentPage = 1;
            var itemsPerPage = 10;

            // Pagination function
            function createPagination(totalItems, currentPage, paginationElementId, onPageChange) {
                var totalPages = Math.ceil(totalItems / itemsPerPage);
                var $pagination = $('#' + paginationElementId);
                $pagination.empty();

                if (totalPages <= 1) return;

                // First button
                var $first = $('<button>&lt;&lt;</button>');
                $first.prop('disabled', currentPage === 1);
                $first.click(function() {
                    if (currentPage !== 1) {
                        onPageChange(1);
                    }
                });
                $pagination.append($first);

                // Previous button
                var $prev = $('<button>&lt;</button>');
                $prev.prop('disabled', currentPage === 1);
                $prev.click(function() {
                    if (currentPage > 1) {
                        onPageChange(currentPage - 1);
                    }
                });
                $pagination.append($prev);

                // Page numbers
                var startPage = Math.max(1, currentPage - 2);
                var endPage = Math.min(totalPages, currentPage + 2);

                if (startPage > 1) {
                    var $page1 = $('<button>1</button>');
                    $page1.click(function() { onPageChange(1); });
                    $pagination.append($page1);

                    if (startPage > 2) {
                        $pagination.append($('<button disabled>...</button>'));
                    }
                }

                for (var i = startPage; i <= endPage; i++) {
                    var $pageBtn = $('<button>' + i + '</button>');
                    if (i === currentPage) {
                        $pageBtn.addClass('active');
                    }
                    $pageBtn.data('page', i);
                    $pageBtn.click(function() {
                        onPageChange($(this).data('page'));
                    });
                    $pagination.append($pageBtn);
                }

                if (endPage < totalPages) {
                    if (endPage < totalPages - 1) {
                        $pagination.append($('<button disabled>...</button>'));
                    }
                    var $pageLast = $('<button>' + totalPages + '</button>');
                    $pageLast.click(function() { onPageChange(totalPages); });
                    $pagination.append($pageLast);
                }

                // Next button
                var $next = $('<button>&gt;</button>');
                $next.prop('disabled', currentPage === totalPages);
                $next.click(function() {
                    if (currentPage < totalPages) {
                        onPageChange(currentPage + 1);
                    }
                });
                $pagination.append($next);

                // Last button
                var $last = $('<button>&gt;&gt;</button>');
                $last.prop('disabled', currentPage === totalPages);
                $last.click(function() {
                    if (currentPage !== totalPages) {
                        onPageChange(totalPages);
                    }
                });
                $pagination.append($last);
            }

            // Display staff list
            function displayStaffList(page) {
                staffCurrentPage = page;
                var start = (page - 1) * itemsPerPage;
                var end = start + itemsPerPage;
                var pageData = staffData.slice(start, end);

                var $list = $('#maintainStaffList');
                $list.empty();

                pageData.forEach(function(staff) {
                    var $li = $('<li class="staff-item"></li>');
                    $li.attr('data-id', staff.staff_id);
                    $li.text(staff.first_name + ' ' + staff.last_name + ' - ' + (staff.stores ? staff.stores.store_name : 'N/A'));
                    $list.append($li);
                });

                createPagination(staffData.length, page, 'staffPagination', displayStaffList);

                var totalPages = Math.ceil(staffData.length / itemsPerPage);
                $('#staffPageInfo').text('Page ' + page + ' of ' + totalPages);

                // Reattach click handlers
                attachStaffClickHandlers();
            }

            // Display customer list
            function displayCustomerList(page) {
                customerCurrentPage = page;
                var start = (page - 1) * itemsPerPage;
                var end = start + itemsPerPage;
                var pageData = customerData.slice(start, end);

                var $list = $('#maintainCustomerList');
                $list.empty();

                pageData.forEach(function(customer) {
                    var $li = $('<li class="customer-item"></li>');
                    $li.attr('data-id', customer.customer_id);
                    $li.text(customer.first_name + ' ' + customer.last_name + ' - ' + (customer.city || 'N/A'));
                    $list.append($li);
                });

                createPagination(customerData.length, page, 'customerPagination', displayCustomerList);

                var totalPages = Math.ceil(customerData.length / itemsPerPage);
                $('#customerPageInfo').text('Page ' + page + ' of ' + totalPages);

                // Reattach click handlers
                attachCustomerClickHandlers();
            }

            // Display product list
            function displayProductList(page) {
                productCurrentPage = page;
                var start = (page - 1) * itemsPerPage;
                var end = start + itemsPerPage;
                var pageData = productData.slice(start, end);

                var $list = $('#maintainProductList');
                $list.empty();

                pageData.forEach(function(product) {
                    var $li = $('<li class="product-item"></li>');
                    $li.attr('data-id', product.product_id);
                    $li.attr('data-product-name', product.product_name);
                    $li.attr('data-brand-name', product.brand_name);
                    $li.text(product.product_name + ' - $' + product.list_price.toFixed(2));
                    $list.append($li);
                });

                createPagination(productData.length, page, 'productPagination', displayProductList);

                var totalPages = Math.ceil(productData.length / itemsPerPage);
                $('#productPageInfo').text('Page ' + page + ' of ' + totalPages);

                // Reattach click handlers
                attachProductClickHandlers();
            }

            // Attach staff click handlers
            function attachStaffClickHandlers() {
                $('.staff-item').click(function () {
                    selectedStaffId = $(this).data('id');
                    $('.staff-item').removeClass('selected');
                    $(this).addClass('selected');

                    $.get('@Url.Action("GetStaff", "Maintain")/' + selectedStaffId, function (data) {
                        if (data.success) {
                            $('#maintain_staff_first_name').val(data.first_name);
                            $('#maintain_staff_last_name').val(data.last_name);
                            $('#maintain_staff_id').val(data.staff_id);
                            $('#maintain_staff_email').val(data.email);
                            $('#maintain_staff_phone').val(data.phone || '');
                            $('#maintain_staff_active').val(data.active);
                            $('#maintain_staff_store').val(data.store_id);
                        }
                    });
                });
            }

            // Attach customer click handlers
            function attachCustomerClickHandlers() {
                $('.customer-item').click(function () {
                    selectedCustomerId = $(this).data('id');
                    $('.customer-item').removeClass('selected');
                    $(this).addClass('selected');

                    $.get('@Url.Action("GetCustomer", "Maintain")/' + selectedCustomerId, function (data) {
                        if (data.success) {
                            $('#maintain_customer_first_name').val(data.first_name);
                            $('#maintain_customer_last_name').val(data.last_name);
                            $('#maintain_customer_id').val(data.customer_id);
                            $('#maintain_customer_email').val(data.email);
                            $('#maintain_customer_phone').val(data.phone || '');
                            $('#maintain_customer_city').val(data.city || '');
                        }
                    });
                });
            }

            // Attach product click handlers
            function attachProductClickHandlers() {
                $('.product-item').click(function () {
                    selectedProductId = $(this).data('id');
                    var productName = $(this).data('product-name');
                    var brandName = $(this).data('brand-name');

                    $('.product-item').removeClass('selected');
                    $(this).addClass('selected');

                    $.get('@Url.Action("GetProduct", "Maintain")/' + selectedProductId, function (data) {
                        if (data.success) {
                            $('#maintain_product_name').val(data.product_name);
                            $('#maintain_product_year').val(data.model_year);
                            $('#maintain_product_price').val(data.list_price);
                            $('#maintain_product_brand').val(data.brand_id);
                            $('#maintain_product_category').val(data.category_id);

                            // Load product image
                            loadProductImage(data.product_id, brandName, data.product_name);
                        }
                    });
                });
            }

            // Function to load product image
            function loadProductImage(productId, brandName, productName) {
                var extensions = ['.jpg', '.jpeg', '.png', '.gif', '.webp'];
                var imagePaths = [];

                // Try product ID based images first
                extensions.forEach(function(ext) {
                    imagePaths.push('/Content/Images/' + productId + ext);
                });

                // Try product name variations
                if (productName) {
                    var productNameClean = productName.replace(/[^a-zA-Z0-9]/g, '_');
                    extensions.forEach(function(ext) {
                        imagePaths.push('/Content/Images/' + productNameClean + ext);
                    });
                    var productNameNoSpaces = productName.replace(/\s+/g, '');
                    extensions.forEach(function(ext) {
                        imagePaths.push('/Content/Images/' + productNameNoSpaces + ext);
                    });
                }

                // Try brand name based images
                if (brandName && brandName !== 'N/A') {
                    extensions.forEach(function(ext) {
                        imagePaths.push('/Content/Images/' + brandName.replace(/\s+/g, '_') + ext);
                        imagePaths.push('/Content/Images/' + brandName.replace(/\s+/g, '') + ext);
                        imagePaths.push('/Content/Images/' + brandName.toLowerCase().replace(/\s+/g, '_') + ext);
                    });
                }

                // Try generic bicycle image
                extensions.forEach(function(ext) {
                    imagePaths.push('/Content/Images/bicycle' + ext);
                    imagePaths.push('/Content/Images/bike' + ext);
                    imagePaths.push('/Content/Images/default' + ext);
                });

                tryLoadImage(imagePaths, 0);
            }

            // Recursively try to load images
            function tryLoadImage(paths, index) {
                if (index >= paths.length) {
                    // No image found, show placeholder
                    $('#productImageContainer').html('<span class="placeholder-text">No image available</span>');
                    return;
                }

                var img = new Image();
                img.onload = function() {
                    // Image found
                    $('#productImageContainer').html('<img src="' + paths[index] + '" alt="Product Image" />');
                };
                img.onerror = function() {
                    // Try next path
                    tryLoadImage(paths, index + 1);
                };
                img.src = paths[index];
            }

            // Initialize lists
            displayStaffList(1);
            displayCustomerList(1);
            displayProductList(1);

            // Update Staff
            $('#updateStaffBtn').click(function () {
                if (!selectedStaffId) {
                    alert('Please select a staff member first');
                    return;
                }

                var data = {
                    staff_id: selectedStaffId,
                    first_name: $('#maintain_staff_first_name').val(),
                    last_name: $('#maintain_staff_last_name').val(),
                    email: $('#maintain_staff_email').val(),
                    phone: $('#maintain_staff_phone').val(),
                    active: $('#maintain_staff_active').val(),
                    store_id: $('#maintain_staff_store').val(),
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                };

                $.ajax({
                    url: '@Url.Action("EditStaff", "Maintain")',
                    type: 'POST',
                    data: data,
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert(response.message);
                        }
                    }
                });
            });

            // Delete Staff
            $('#deleteStaffBtn').click(function () {
                if (!selectedStaffId) {
                    alert('Please select a staff member first');
                    return;
                }

                if (confirm('Are you sure you want to delete this staff member?')) {
                    $.ajax({
                        url: '@Url.Action("DeleteStaff", "Maintain")',
                        type: 'POST',
                        data: {
                            id: selectedStaffId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                alert(response.message);
                                location.reload();
                            } else {
                                alert(response.message);
                            }
                        }
                    });
                }
            });

            // Update Customer
            $('#updateCustomerBtn').click(function () {
                if (!selectedCustomerId) {
                    alert('Please select a customer first');
                    return;
                }

                var data = {
                    customer_id: selectedCustomerId,
                    first_name: $('#maintain_customer_first_name').val(),
                    last_name: $('#maintain_customer_last_name').val(),
                    email: $('#maintain_customer_email').val(),
                    phone: $('#maintain_customer_phone').val(),
                    city: $('#maintain_customer_city').val(),
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                };

                $.ajax({
                    url: '@Url.Action("EditCustomer", "Maintain")',
                    type: 'POST',
                    data: data,
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert(response.message);
                        }
                    }
                });
            });

            // Delete Customer
            $('#deleteCustomerBtn').click(function () {
                if (!selectedCustomerId) {
                    alert('Please select a customer first');
                    return;
                }

                if (confirm('Are you sure you want to delete this customer?')) {
                    $.ajax({
                        url: '@Url.Action("DeleteCustomer", "Maintain")',
                        type: 'POST',
                        data: {
                            id: selectedCustomerId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                alert(response.message);
                                location.reload();
                            } else {
                                alert(response.message);
                            }
                        }
                    });
                }
            });

            // Update Product
            $('#updateProductBtn').click(function () {
                if (!selectedProductId) {
                    alert('Please select a product first');
                    return;
                }

                var data = {
                    product_id: selectedProductId,
                    product_name: $('#maintain_product_name').val(),
                    model_year: $('#maintain_product_year').val(),
                    list_price: $('#maintain_product_price').val(),
                    brand_id: $('#maintain_product_brand').val(),
                    category_id: $('#maintain_product_category').val(),
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                };

                $.ajax({
                    url: '@Url.Action("EditProduct", "Maintain")',
                    type: 'POST',
                    data: data,
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert(response.message);
                        }
                    }
                });
            });

            // Delete Product
            $('#deleteProductBtn').click(function () {
                if (!selectedProductId) {
                    alert('Please select a product first');
                    return;
                }

                if (confirm('Are you sure you want to delete this product?')) {
                    $.ajax({
                        url: '@Url.Action("DeleteProduct", "Maintain")',
                        type: 'POST',
                        data: {
                            id: selectedProductId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                alert(response.message);
                                location.reload();
                            } else {
                                alert(response.message);
                            }
                        }
                    });
                }
            });
        });
    </script>
}