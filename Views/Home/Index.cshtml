@model u22710362_HW03.Models.HomeViewModel

@{
    ViewBag.Title = "Home - Bike Store Management";
}

<style>
    .section-container {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
    }

    .section-box {
        flex: 1;
        border: 2px solid #ccc;
        padding: 15px;
        background-color: #f9f9f9;
    }

        .section-box h4 {
            margin-top: 0;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 2px solid #333;
        }

    .form-row {
        display: flex;
        gap: 10px;
        margin-bottom: 10px;
        align-items: center;
    }

        .form-row label {
            flex: 0 0 100px;
            margin: 0;
        }

        .form-row input,
        .form-row select {
            flex: 1;
        }

    .list-box {
        border: 1px solid #999;
        padding: 10px;
        min-height: 150px;
        max-height: 200px;
        overflow-y: auto;
        background-color: white;
        margin-top: 10px;
    }

        .list-box ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .list-box li {
            padding: 5px 0;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }

            .list-box li:hover {
                background-color: #f0f0f0;
            }

            .list-box li.selected {
                background-color: #e3f2fd;
            }

    .pagination {
        display: flex;
        gap: 5px;
        margin-top: 10px;
        justify-content: flex-start;
        flex-wrap: wrap;
    }

        .pagination button {
            padding: 5px 10px;
            border: 1px solid #999;
            background-color: white;
            cursor: pointer;
            min-width: 35px;
        }

            .pagination button:hover:not(:disabled) {
                background-color: #f0f0f0;
            }

            .pagination button.active {
                background-color: #007bff;
                color: white;
                border-color: #007bff;
            }

            .pagination button:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

    .btn-create {
        margin-top: 10px;
        padding: 8px 15px;
    }

    .product-details {
        display: flex;
        gap: 20px;
    }

    .product-form {
        flex: 1;
    }

    .product-image {
        flex: 0 0 200px;
        border: 1px solid #999;
        height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }

    .filter-row {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
    }

        .filter-row select {
            flex: 1;
        }

    .page-info {
        font-size: 12px;
        color: #666;
        margin-top: 5px;
    }
</style>

<div class="container-fluid mt-4">
    <!-- Top Navigation Tabs -->
    <ul class="nav nav-tabs mb-3">
        <li class="nav-item">
            <a class="nav-link active" href="@Url.Action("Index", "Home")">Staff</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#">Customers</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#">Products</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("Index", "Maintain")">Maintain</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("Index", "Report")">Reports</a>
        </li>
    </ul>

    <div class="section-container">
        <!-- Staff Section -->
        <div class="section-box">
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <h4>Staff</h4>
                <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#createStaffModal">Create</button>
            </div>

            <div class="form-row">
                <label>First Name</label>
                <input type="text" class="form-control form-control-sm" id="staff_first_name" readonly>
            </div>
            <div class="form-row">
                <label>Last Name</label>
                <input type="text" class="form-control form-control-sm" id="staff_last_name" readonly>
            </div>
            <div class="form-row">
                <label>Staff id</label>
                <input type="text" class="form-control form-control-sm" id="staff_id" readonly>
            </div>
            <div class="form-row">
                <label>Email</label>
                <input type="text" class="form-control form-control-sm" id="staff_email" readonly>
            </div>

            <div class="list-box">
                <ul id="staffList"></ul>
            </div>

            <div class="page-info" id="staffPageInfo">Page 1 of 1</div>
            <div class="pagination" id="staffPagination"></div>
        </div>

        <!-- Customers Section -->
        <div class="section-box">
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <h4>Customers</h4>
                <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#createCustomerModal">Create</button>
            </div>

            <div class="form-row">
                <label>First Name</label>
                <input type="text" class="form-control form-control-sm" id="customer_first_name" readonly>
            </div>
            <div class="form-row">
                <label>Last Name</label>
                <input type="text" class="form-control form-control-sm" id="customer_last_name" readonly>
            </div>
            <div class="form-row">
                <label>Customer id</label>
                <input type="text" class="form-control form-control-sm" id="customer_id" readonly>
            </div>
            <div class="form-row">
                <label>Email</label>
                <input type="text" class="form-control form-control-sm" id="customer_email" readonly>
            </div>

            <div class="list-box">
                <ul id="customerList"></ul>
            </div>

            <div class="page-info" id="customerPageInfo">Page 1 of 1</div>
            <div class="pagination" id="customerPagination"></div>
        </div>

        <!-- Products Section -->
        <div class="section-box">
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <h4>Products</h4>
                <div>
                    <select class="form-select form-select-sm d-inline-block" style="width: auto; margin-right: 10px;" id="brandFilter">
                        <option value="">All Brands</option>
                        @foreach (var brand in ViewBag.Brands)
                        {
                            <option value="@brand.brand_id">@brand.brand_name</option>
                        }
                    </select>
                    <button type="button" class="btn btn-sm btn-secondary" id="filterBtn">Filter</button>
                </div>
            </div>

            <div class="product-details">
                <div class="product-form">
                    <div class="form-row">
                        <label>Product Name</label>
                        <input type="text" class="form-control form-control-sm" id="product_name" readonly>
                    </div>
                    <div class="form-row">
                        <label>Model Year</label>
                        <input type="text" class="form-control form-control-sm" id="product_year" readonly>
                    </div>
                    <div class="form-row">
                        <label>Price</label>
                        <input type="text" class="form-control form-control-sm" id="product_price" readonly>
                    </div>
                </div>
                <div class="product-image">
                    <span>Bicycle image</span>
                </div>
            </div>

            <div class="list-box" style="margin-top: 10px;">
                <ul id="productList"></ul>
            </div>

            <div class="page-info" id="productPageInfo">Page 1 of 1</div>
            <div class="pagination" id="productPagination"></div>
        </div>
    </div>
</div>

<!-- Create Staff Modal -->
<div class="modal fade" id="createStaffModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Staff</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="createStaffForm">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">First Name *</label>
                        <input type="text" class="form-control" name="first_name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Last Name *</label>
                        <input type="text" class="form-control" name="last_name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email *</label>
                        <input type="email" class="form-control" name="email" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Phone</label>
                        <input type="text" class="form-control" name="phone">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Active *</label>
                        <select class="form-select" name="active" required>
                            <option value="1">Yes</option>
                            <option value="0">No</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Store *</label>
                        <select class="form-select" name="store_id" required>
                            <option value="">Select Store</option>
                            @foreach (var store in ViewBag.Stores)
                            {
                                <option value="@store.store_id">@store.store_name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Manager (Optional)</label>
                        <select class="form-select" name="manager_id">
                            <option value="">No Manager</option>
                            @foreach (var staff in Model.Staffs)
                            {
                                <option value="@staff.staff_id">@staff.first_name @staff.last_name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Staff</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Create Customer Modal -->
<div class="modal fade" id="createCustomerModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Customer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="createCustomerForm">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">First Name *</label>
                        <input type="text" class="form-control" name="first_name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Last Name *</label>
                        <input type="text" class="form-control" name="last_name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email *</label>
                        <input type="email" class="form-control" name="email" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Phone</label>
                        <input type="text" class="form-control" name="phone">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Street</label>
                        <input type="text" class="form-control" name="street">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">City</label>
                        <input type="text" class="form-control" name="city">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">State</label>
                        <input type="text" class="form-control" name="state">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Zip Code</label>
                        <input type="text" class="form-control" name="zip_code" maxlength="5">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success">Save Customer</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var selectedStaffId = null;
            var selectedCustomerId = null;
            var selectedProductId = null;

            // Pagination data - serialize only needed properties
            var staffData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                Model.Staffs.Select(s => new {
                    staff_id = s.staff_id,
                    first_name = s.first_name,
                    last_name = s.last_name,
                    email = s.email,
                    phone = s.phone,
                    stores = new { store_name = s.stores != null ? s.stores.store_name : "N/A" }
                }).ToList()
            ));

            var customerData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                Model.Customers.Select(c => new {
                    customer_id = c.customer_id,
                    first_name = c.first_name,
                    last_name = c.last_name,
                    email = c.email,
                    phone = c.phone,
                    city = c.city
                }).ToList()
            ));

            var productData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                Model.Products.Select(p => new {
                    product_id = p.product_id,
                    product_name = p.product_name,
                    model_year = p.model_year,
                    list_price = p.list_price
                }).ToList()
            ));

            var staffCurrentPage = 1;
            var customerCurrentPage = 1;
            var productCurrentPage = 1;
            var itemsPerPage = 5;

            // Pagination function
            function createPagination(totalItems, currentPage, paginationElementId, onPageChange) {
                var totalPages = Math.ceil(totalItems / itemsPerPage);
                var $pagination = $('#' + paginationElementId);
                $pagination.empty();

                if (totalPages <= 1) return;

                // First button
                var $first = $('<button>&lt;&lt;</button>');
                $first.prop('disabled', currentPage === 1);
                $first.click(function() {
                    if (currentPage !== 1) {
                        onPageChange(1);
                    }
                });
                $pagination.append($first);

                // Previous button
                var $prev = $('<button>&lt;</button>');
                $prev.prop('disabled', currentPage === 1);
                $prev.click(function() {
                    if (currentPage > 1) {
                        onPageChange(currentPage - 1);
                    }
                });
                $pagination.append($prev);

                // Page numbers
                var startPage = Math.max(1, currentPage - 2);
                var endPage = Math.min(totalPages, currentPage + 2);

                if (startPage > 1) {
                    var $page1 = $('<button>1</button>');
                    $page1.click(function() { onPageChange(1); });
                    $pagination.append($page1);

                    if (startPage > 2) {
                        $pagination.append($('<button disabled>...</button>'));
                    }
                }

                for (var i = startPage; i <= endPage; i++) {
                    var $pageBtn = $('<button>' + i + '</button>');
                    if (i === currentPage) {
                        $pageBtn.addClass('active');
                    }
                    $pageBtn.data('page', i);
                    $pageBtn.click(function() {
                        onPageChange($(this).data('page'));
                    });
                    $pagination.append($pageBtn);
                }

                if (endPage < totalPages) {
                    if (endPage < totalPages - 1) {
                        $pagination.append($('<button disabled>...</button>'));
                    }
                    var $pageLast = $('<button>' + totalPages + '</button>');
                    $pageLast.click(function() { onPageChange(totalPages); });
                    $pagination.append($pageLast);
                }

                // Next button
                var $next = $('<button>&gt;</button>');
                $next.prop('disabled', currentPage === totalPages);
                $next.click(function() {
                    if (currentPage < totalPages) {
                        onPageChange(currentPage + 1);
                    }
                });
                $pagination.append($next);

                // Last button
                var $last = $('<button>&gt;&gt;</button>');
                $last.prop('disabled', currentPage === totalPages);
                $last.click(function() {
                    if (currentPage !== totalPages) {
                        onPageChange(totalPages);
                    }
                });
                $pagination.append($last);
            }

            // Display staff list
            function displayStaffList(page) {
                staffCurrentPage = page;
                var start = (page - 1) * itemsPerPage;
                var end = start + itemsPerPage;
                var pageData = staffData.slice(start, end);

                var $list = $('#staffList');
                $list.empty();

                pageData.forEach(function(staff) {
                    var $li = $('<li class="staff-item"></li>');
                    $li.attr('data-id', staff.staff_id);
                    $li.text(staff.first_name + ' ' + staff.last_name + ' - ' + (staff.stores ? staff.stores.store_name : 'N/A'));
                    $list.append($li);
                });

                createPagination(staffData.length, page, 'staffPagination', displayStaffList);

                var totalPages = Math.ceil(staffData.length / itemsPerPage);
                $('#staffPageInfo').text('Page ' + page + ' of ' + totalPages);

                // Reattach click handlers
                attachStaffClickHandlers();
            }

            // Display customer list
            function displayCustomerList(page) {
                customerCurrentPage = page;
                var start = (page - 1) * itemsPerPage;
                var end = start + itemsPerPage;
                var pageData = customerData.slice(start, end);

                var $list = $('#customerList');
                $list.empty();

                pageData.forEach(function(customer) {
                    var $li = $('<li class="customer-item"></li>');
                    $li.attr('data-id', customer.customer_id);
                    $li.text(customer.first_name + ' ' + customer.last_name + ' - ' + (customer.city || 'N/A'));
                    $list.append($li);
                });

                createPagination(customerData.length, page, 'customerPagination', displayCustomerList);

                var totalPages = Math.ceil(customerData.length / itemsPerPage);
                $('#customerPageInfo').text('Page ' + page + ' of ' + totalPages);

                // Reattach click handlers
                attachCustomerClickHandlers();
            }

            // Display product list
            function displayProductList(page) {
                productCurrentPage = page;
                var start = (page - 1) * itemsPerPage;
                var end = start + itemsPerPage;
                var pageData = productData.slice(start, end);

                var $list = $('#productList');
                $list.empty();

                pageData.forEach(function(product) {
                    var $li = $('<li class="product-item"></li>');
                    $li.attr('data-id', product.product_id);
                    $li.text(product.product_name + ' - $' + product.list_price);
                    $list.append($li);
                });

                createPagination(productData.length, page, 'productPagination', displayProductList);

                var totalPages = Math.ceil(productData.length / itemsPerPage);
                $('#productPageInfo').text('Page ' + page + ' of ' + totalPages);

                // Reattach click handlers
                attachProductClickHandlers();
            }

            // Attach staff click handlers
            function attachStaffClickHandlers() {
                $('.staff-item').click(function () {
                    selectedStaffId = $(this).data('id');
                    $('.staff-item').removeClass('selected');
                    $(this).addClass('selected');

                    // Find the staff in the data
                    var staff = staffData.find(s => s.staff_id === selectedStaffId);
                    if (staff) {
                        $('#staff_first_name').val(staff.first_name);
                        $('#staff_last_name').val(staff.last_name);
                        $('#staff_id').val(staff.staff_id);
                        $('#staff_email').val(staff.email);
                    }
                });
            }

            // Attach customer click handlers
            function attachCustomerClickHandlers() {
                $('.customer-item').click(function () {
                    selectedCustomerId = $(this).data('id');
                    $('.customer-item').removeClass('selected');
                    $(this).addClass('selected');

                    // Find the customer in the data
                    var customer = customerData.find(c => c.customer_id === selectedCustomerId);
                    if (customer) {
                        $('#customer_first_name').val(customer.first_name);
                        $('#customer_last_name').val(customer.last_name);
                        $('#customer_id').val(customer.customer_id);
                        $('#customer_email').val(customer.email);
                    }
                });
            }

            // Attach product click handlers
            function attachProductClickHandlers() {
                $('.product-item').click(function () {
                    selectedProductId = $(this).data('id');
                    $('.product-item').removeClass('selected');
                    $(this).addClass('selected');

                    // Find the product in the data
                    var product = productData.find(p => p.product_id === selectedProductId);
                    if (product) {
                        $('#product_name').val(product.product_name);
                        $('#product_year').val(product.model_year);
                        $('#product_price').val('$' + product.list_price);
                    }
                });
            }

            // Initialize lists
            displayStaffList(1);
            displayCustomerList(1);
            displayProductList(1);

            // Create Staff Form Submit
            $('#createStaffForm').submit(function (e) {
                e.preventDefault();
                var submitBtn = $(this).find('button[type="submit"]');
                submitBtn.prop('disabled', true).text('Saving...');

                $.ajax({
                    url: '@Url.Action("CreateStaff", "Home")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            alert(response.message || 'Staff created successfully!');
                            $('#createStaffModal').modal('hide');
                            location.reload();
                        } else {
                            alert(response.message || 'Failed to create staff.');
                            submitBtn.prop('disabled', false).text('Save Staff');
                        }
                    },
                    error: function(xhr) {
                        alert('An error occurred: ' + (xhr.responseText || 'Unknown error'));
                        submitBtn.prop('disabled', false).text('Save Staff');
                    }
                });
            });

            // Create Customer Form Submit
            $('#createCustomerForm').submit(function (e) {
                e.preventDefault();
                var submitBtn = $(this).find('button[type="submit"]');
                submitBtn.prop('disabled', true).text('Saving...');

                $.ajax({
                    url: '@Url.Action("CreateCustomer", "Home")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            alert(response.message || 'Customer created successfully!');
                            $('#createCustomerModal').modal('hide');
                            location.reload();
                        } else {
                            alert(response.message || 'Failed to create customer.');
                            submitBtn.prop('disabled', false).text('Save Customer');
                        }
                    },
                    error: function(xhr) {
                        alert('An error occurred: ' + (xhr.responseText || 'Unknown error'));
                        submitBtn.prop('disabled', false).text('Save Customer');
                    }
                });
            });

            // Filter Products
            $('#filterBtn').click(function () {
                var brandId = $('#brandFilter').val();

                $.ajax({
                    url: '@Url.Action("FilterProducts", "Home")',
                    type: 'GET',
                    data: { brandId: brandId },
                    success: function (data) {
                        if (data && data.length > 0) {
                            // Update the productData with filtered results
                            productData = data;
                            displayProductList(1);
                        } else {
                            productData = [];
                            $('#productList').html('<li>No products found</li>');
                            $('#productPagination').empty();
                            $('#productPageInfo').text('Page 0 of 0');
                        }
                    },
                    error: function() {
                        alert('Failed to filter products');
                    }
                });
            });
        });
    </script>
}