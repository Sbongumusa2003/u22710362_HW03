@model u22710362_HW03.Models.HomeViewModel

@{
    ViewBag.Title = "Home - Bike Store Management";
}

<style>
    .section-container {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
    }

    .section-box {
        flex: 1;
        border: 2px solid #ccc;
        padding: 15px;
        background-color: #f9f9f9;
    }

        .section-box h4 {
            margin-top: 0;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 2px solid #333;
        }

    .form-row {
        display: flex;
        gap: 10px;
        margin-bottom: 10px;
        align-items: center;
    }

        .form-row label {
            flex: 0 0 100px;
            margin: 0;
        }

        .form-row input,
        .form-row select {
            flex: 1;
        }

    .list-box {
        border: 1px solid #999;
        padding: 10px;
        min-height: 150px;
        max-height: 200px;
        overflow-y: auto;
        background-color: white;
        margin-top: 10px;
    }

        .list-box ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .list-box li {
            padding: 5px 0;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }

            .list-box li:hover {
                background-color: #f0f0f0;
            }

            .list-box li.selected {
                background-color: #e3f2fd;
            }

    .pagination {
        display: flex;
        gap: 5px;
        margin-top: 10px;
        justify-content: flex-start;
        flex-wrap: wrap;
    }

        .pagination button {
            padding: 5px 10px;
            border: 1px solid #999;
            background-color: white;
            cursor: pointer;
            min-width: 35px;
        }

            .pagination button:hover:not(:disabled) {
                background-color: #f0f0f0;
            }

            .pagination button.active {
                background-color: #007bff;
                color: white;
                border-color: #007bff;
            }

            .pagination button:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

    .action-buttons {
        display: flex;
        gap: 10px;
        margin-top: 15px;
    }

    .product-section {
        display: flex;
        gap: 20px;
    }

    .product-left {
        flex: 1;
    }

    .product-details {
        margin-bottom: 20px;
    }

    .product-image {
        border: 1px solid #999;
        height: 200px;
        width: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
        overflow: hidden;
    }

        .product-image img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }

        .product-image .placeholder-text {
            color: #999;
            font-style: italic;
        }

    .filter-section {
        display: flex;
        gap: 10px;
        align-items: center;
        margin-bottom: 15px;
    }

    .page-info {
        font-size: 12px;
        color: #666;
        margin-top: 5px;
    }

    .product-info-row {
        display: flex;
        gap: 10px;
        margin-bottom: 8px;
    }

        .product-info-row label {
            flex: 0 0 100px;
            font-weight: bold;
        }

        .product-info-row span {
            flex: 1;
        }

    .product-list {
        margin-top: 15px;
        border: 1px solid #999;
        padding: 10px;
        background-color: white;
        max-height: 150px;
        overflow-y: auto;
    }

        .product-list ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .product-list li {
            padding: 5px 0;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }

            .product-list li:hover {
                background-color: #f0f0f0;
            }

            .product-list li.selected {
                background-color: #e3f2fd;
            }
</style>

<div class="container-fluid mt-4">
    <h2>Home</h2>

    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage as string))
    {
        <div class="alert alert-danger">
            @ViewBag.ErrorMessage
        </div>
    }

    @Html.AntiForgeryToken()

    <div class="section-container">
        <!-- Staff Section -->
        <div class="section-box">
            <h4>Staff</h4>

            <div class="form-row">
                <label>First Name</label>
                <input type="text" class="form-control form-control-sm" id="staff_first_name" readonly>
            </div>
            <div class="form-row">
                <label>Last Name</label>
                <input type="text" class="form-control form-control-sm" id="staff_last_name" readonly>
            </div>
            <div class="form-row">
                <label>Staff ID</label>
                <input type="text" class="form-control form-control-sm" id="staff_id" readonly>
            </div>
            <div class="form-row">
                <label>Email</label>
                <input type="text" class="form-control form-control-sm" id="staff_email" readonly>
            </div>
            <div class="form-row">
                <label>Store</label>
                <input type="text" class="form-control form-control-sm" id="staff_store" readonly>
            </div>

            <div class="list-box">
                <ul id="staffList"></ul>
            </div>

            <div class="page-info" id="staffPageInfo">Page 1 of 1</div>
            <div class="pagination" id="staffPagination"></div>

            <div class="action-buttons">
                <button class="btn btn-sm btn-primary" id="createStaffBtn">Create</button>
            </div>
        </div>

        <!-- Customers Section -->
        <div class="section-box">
            <h4>Customers</h4>

            <div class="form-row">
                <label>First Name</label>
                <input type="text" class="form-control form-control-sm" id="customer_first_name" readonly>
            </div>
            <div class="form-row">
                <label>Last Name</label>
                <input type="text" class="form-control form-control-sm" id="customer_last_name" readonly>
            </div>
            <div class="form-row">
                <label>Customer ID</label>
                <input type="text" class="form-control form-control-sm" id="customer_id" readonly>
            </div>
            <div class="form-row">
                <label>Email</label>
                <input type="text" class="form-control form-control-sm" id="customer_email" readonly>
            </div>
            <div class="form-row">
                <label>City</label>
                <input type="text" class="form-control form-control-sm" id="customer_city" readonly>
            </div>

            <div class="list-box">
                <ul id="customerList"></ul>
            </div>

            <div class="page-info" id="customerPageInfo">Page 1 of 1</div>
            <div class="pagination" id="customerPagination"></div>

            <div class="action-buttons">
                <button class="btn btn-sm btn-primary" id="createCustomerBtn">Create</button>
            </div>
        </div>

        <!-- Products Section -->
        <div class="section-box">
            <h4>Products</h4>

            <div class="product-section">
                <div class="product-left">
                    <div class="product-details">
                        <div class="filter-section">
                            <label style="font-weight: bold;">Filter:</label>
                            <select class="form-select form-select-sm" id="productBrandFilter" style="width: 150px;">
                                <option value="">All Brands</option>
                                @if (ViewBag.Brands != null)
                                {
                                    foreach (var brand in ViewBag.Brands)
                                    {
                                        <option value="@brand.brand_id">@brand.brand_name</option>
                                    }
                                }
                            </select>
                            <select class="form-select form-select-sm" id="productCategoryFilter" style="width: 150px;">
                                <option value="">All Categories</option>
                                @if (ViewBag.Categories != null)
                                {
                                    foreach (var category in ViewBag.Categories)
                                    {
                                        <option value="@category.category_id">@category.category_name</option>
                                    }
                                }
                            </select>
                        </div>

                        <div class="product-info-row">
                            <label>Product Name:</label>
                            <span id="product_name">-</span>
                        </div>
                        <div class="product-info-row">
                            <label>Brand:</label>
                            <span id="product_brand">-</span>
                        </div>
                        <div class="product-info-row">
                            <label>Category:</label>
                            <span id="product_category">-</span>
                        </div>
                        <div class="product-info-row">
                            <label>Model Year:</label>
                            <span id="product_year">-</span>
                        </div>
                        <div class="product-info-row">
                            <label>Price:</label>
                            <span id="product_price">-</span>
                        </div>
                    </div>

                    <div class="product-list">
                        <ul id="productList"></ul>
                    </div>

                    <div class="page-info" id="productPageInfo">Page 1 of 1</div>
                    <div class="pagination" id="productPagination"></div>
                </div>

                <div class="product-image" id="productImageContainer">
                    <span class="placeholder-text">Select a product</span>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Staff Creation -->
<div class="modal fade" id="staffModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Staff</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">First Name *</label>
                    <input type="text" class="form-control" id="modal_staff_first_name" required>
                </div>
                <div class="mb-3">
                    <label class="form-label">Last Name *</label>
                    <input type="text" class="form-control" id="modal_staff_last_name" required>
                </div>
                <div class="mb-3">
                    <label class="form-label">Email *</label>
                    <input type="email" class="form-control" id="modal_staff_email" required>
                </div>
                <div class="mb-3">
                    <label class="form-label">Phone</label>
                    <input type="text" class="form-control" id="modal_staff_phone">
                </div>
                <div class="mb-3">
                    <label class="form-label">Active *</label>
                    <select class="form-select" id="modal_staff_active">
                        <option value="1">Yes</option>
                        <option value="0">No</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Store *</label>
                    <select class="form-select" id="modal_staff_store" required>
                        @if (ViewBag.Stores != null)
                        {
                            foreach (var store in ViewBag.Stores)
                            {
                                <option value="@store.store_id">@store.store_name</option>
                            }
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Manager</label>
                    <select class="form-select" id="modal_staff_manager">
                        <option value="">No Manager</option>
                        @if (Model != null && Model.Staffs != null)
                        {
                            foreach (var staff in Model.Staffs)
                            {
                                <option value="@staff.staff_id">@staff.first_name @staff.last_name</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveStaffBtn">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Customer Creation -->
<div class="modal fade" id="customerModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Customer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">First Name *</label>
                    <input type="text" class="form-control" id="modal_customer_first_name" required>
                </div>
                <div class="mb-3">
                    <label class="form-label">Last Name *</label>
                    <input type="text" class="form-control" id="modal_customer_last_name" required>
                </div>
                <div class="mb-3">
                    <label class="form-label">Email *</label>
                    <input type="email" class="form-control" id="modal_customer_email" required>
                </div>
                <div class="mb-3">
                    <label class="form-label">Phone</label>
                    <input type="text" class="form-control" id="modal_customer_phone">
                </div>
                <div class="mb-3">
                    <label class="form-label">Street</label>
                    <input type="text" class="form-control" id="modal_customer_street">
                </div>
                <div class="mb-3">
                    <label class="form-label">City</label>
                    <input type="text" class="form-control" id="modal_customer_city">
                </div>
                <div class="mb-3">
                    <label class="form-label">State</label>
                    <input type="text" class="form-control" id="modal_customer_state">
                </div>
                <div class="mb-3">
                    <label class="form-label">Zip Code</label>
                    <input type="text" class="form-control" id="modal_customer_zip" maxlength="5">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveCustomerBtn">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize data arrays from server
            var staffData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                Model.Staffs.Select(s => new {
                    staff_id = s.staff_id,
                    first_name = s.first_name,
                    last_name = s.last_name,
                    email = s.email,
                    phone = s.phone,
                    active = s.active,
                    store_id = s.store_id,
                    store_name = s.stores != null ? s.stores.store_name : "N/A"
                }).ToList()
            ));

            var customerData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                Model.Customers.Select(c => new {
                    customer_id = c.customer_id,
                    first_name = c.first_name,
                    last_name = c.last_name,
                    email = c.email,
                    phone = c.phone,
                    street = c.street,
                    city = c.city,
                    state = c.state,
                    zip_code = c.zip_code
                }).ToList()
            ));

            var productData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                Model.Products.Select(p => new {
                    product_id = p.product_id,
                    product_name = p.product_name,
                    brand_id = p.brand_id,
                    brand_name = p.brands != null ? p.brands.brand_name : "N/A",
                    category_id = p.category_id,
                    category_name = p.categories != null ? p.categories.category_name : "N/A",
                    model_year = p.model_year,
                    list_price = p.list_price
                }).ToList()
            ));

            var filteredProductData = productData;
            var itemsPerPage = 10;
            var staffCurrentPage = 1;
            var customerCurrentPage = 1;
            var productCurrentPage = 1;
            var selectedStaffId = null;
            var selectedCustomerId = null;
            var selectedProductId = null;

            // Pagination function
            function createPagination(totalItems, currentPage, paginationElementId, onPageChange) {
                var totalPages = Math.ceil(totalItems / itemsPerPage);
                var $pagination = $('#' + paginationElementId);
                $pagination.empty();

                if (totalPages <= 1) return;

                // First button
                var $first = $('<button>&lt;&lt;</button>');
                $first.prop('disabled', currentPage === 1);
                $first.click(function() {
                    if (currentPage !== 1) {
                        onPageChange(1);
                    }
                });
                $pagination.append($first);

                // Previous button
                var $prev = $('<button>&lt;</button>');
                $prev.prop('disabled', currentPage === 1);
                $prev.click(function() {
                    if (currentPage > 1) {
                        onPageChange(currentPage - 1);
                    }
                });
                $pagination.append($prev);

                // Page numbers
                var startPage = Math.max(1, currentPage - 2);
                var endPage = Math.min(totalPages, currentPage + 2);

                if (startPage > 1) {
                    var $page1 = $('<button>1</button>');
                    $page1.click(function() { onPageChange(1); });
                    $pagination.append($page1);

                    if (startPage > 2) {
                        $pagination.append($('<button disabled>...</button>'));
                    }
                }

                for (var i = startPage; i <= endPage; i++) {
                    var $pageBtn = $('<button>' + i + '</button>');
                    if (i === currentPage) {
                        $pageBtn.addClass('active');
                    }
                    $pageBtn.data('page', i);
                    $pageBtn.click(function() {
                        onPageChange($(this).data('page'));
                    });
                    $pagination.append($pageBtn);
                }

                if (endPage < totalPages) {
                    if (endPage < totalPages - 1) {
                        $pagination.append($('<button disabled>...</button>'));
                    }
                    var $pageLast = $('<button>' + totalPages + '</button>');
                    $pageLast.click(function() { onPageChange(totalPages); });
                    $pagination.append($pageLast);
                }

                // Next button
                var $next = $('<button>&gt;</button>');
                $next.prop('disabled', currentPage === totalPages);
                $next.click(function() {
                    if (currentPage < totalPages) {
                        onPageChange(currentPage + 1);
                    }
                });
                $pagination.append($next);

                // Last button
                var $last = $('<button>&gt;&gt;</button>');
                $last.prop('disabled', currentPage === totalPages);
                $last.click(function() {
                    if (currentPage !== totalPages) {
                        onPageChange(totalPages);
                    }
                });
                $pagination.append($last);
            }

            // Display staff list
            function displayStaffList(page) {
                staffCurrentPage = page;
                var start = (page - 1) * itemsPerPage;
                var end = start + itemsPerPage;
                var pageData = staffData.slice(start, end);

                var $list = $('#staffList');
                $list.empty();

                if (pageData.length === 0) {
                    $list.append('<li style="text-align: center; color: #999;">No staff found</li>');
                } else {
                    pageData.forEach(function(staff) {
                        var $li = $('<li class="staff-item"></li>');
                        $li.attr('data-id', staff.staff_id);
                        $li.text(staff.first_name + ' ' + staff.last_name + ' - ' + staff.store_name);
                        if (staff.staff_id === selectedStaffId) {
                            $li.addClass('selected');
                        }
                        $list.append($li);
                    });
                }

                createPagination(staffData.length, page, 'staffPagination', displayStaffList);

                var totalPages = Math.ceil(staffData.length / itemsPerPage);
                $('#staffPageInfo').text('Page ' + page + ' of ' + totalPages);

                attachStaffClickHandlers();
            }

            // Display customer list
            function displayCustomerList(page) {
                customerCurrentPage = page;
                var start = (page - 1) * itemsPerPage;
                var end = start + itemsPerPage;
                var pageData = customerData.slice(start, end);

                var $list = $('#customerList');
                $list.empty();

                if (pageData.length === 0) {
                    $list.append('<li style="text-align: center; color: #999;">No customers found</li>');
                } else {
                    pageData.forEach(function(customer) {
                        var $li = $('<li class="customer-item"></li>');
                        $li.attr('data-id', customer.customer_id);
                        $li.text(customer.first_name + ' ' + customer.last_name + ' - ' + (customer.city || 'N/A'));
                        if (customer.customer_id === selectedCustomerId) {
                            $li.addClass('selected');
                        }
                        $list.append($li);
                    });
                }

                createPagination(customerData.length, page, 'customerPagination', displayCustomerList);

                var totalPages = Math.ceil(customerData.length / itemsPerPage);
                $('#customerPageInfo').text('Page ' + page + ' of ' + totalPages);

                attachCustomerClickHandlers();
            }

            // Display product list
            function displayProductList(page) {
                productCurrentPage = page;
                var start = (page - 1) * itemsPerPage;
                var end = start + itemsPerPage;
                var pageData = filteredProductData.slice(start, end);

                var $list = $('#productList');
                $list.empty();

                if (pageData.length === 0) {
                    $list.append('<li style="text-align: center; color: #999;">No products found</li>');
                } else {
                    pageData.forEach(function(product) {
                        var $li = $('<li class="product-item"></li>');
                        $li.attr('data-id', product.product_id);
                        $li.text(product.product_name + ' - $' + product.list_price.toFixed(2));
                        if (product.product_id === selectedProductId) {
                            $li.addClass('selected');
                        }
                        $list.append($li);
                    });
                }

                createPagination(filteredProductData.length, page, 'productPagination', displayProductList);

                var totalPages = Math.ceil(filteredProductData.length / itemsPerPage);
                $('#productPageInfo').text('Page ' + page + ' of ' + totalPages);

                attachProductClickHandlers();
            }

            // Attach staff click handlers
            function attachStaffClickHandlers() {
                $('.staff-item').click(function () {
                    selectedStaffId = $(this).data('id');
                    $('.staff-item').removeClass('selected');
                    $(this).addClass('selected');

                    var staff = staffData.find(s => s.staff_id === selectedStaffId);
                    if (staff) {
                        $('#staff_first_name').val(staff.first_name);
                        $('#staff_last_name').val(staff.last_name);
                        $('#staff_id').val(staff.staff_id);
                        $('#staff_email').val(staff.email || '');
                        $('#staff_store').val(staff.store_name);
                    }
                });
            }

            // Attach customer click handlers
            function attachCustomerClickHandlers() {
                $('.customer-item').click(function () {
                    selectedCustomerId = $(this).data('id');
                    $('.customer-item').removeClass('selected');
                    $(this).addClass('selected');

                    var customer = customerData.find(c => c.customer_id === selectedCustomerId);
                    if (customer) {
                        $('#customer_first_name').val(customer.first_name);
                        $('#customer_last_name').val(customer.last_name);
                        $('#customer_id').val(customer.customer_id);
                        $('#customer_email').val(customer.email || '');
                        $('#customer_city').val(customer.city || '');
                    }
                });
            }

            // Attach product click handlers
            function attachProductClickHandlers() {
                $('.product-item').click(function () {
                    selectedProductId = $(this).data('id');
                    $('.product-item').removeClass('selected');
                    $(this).addClass('selected');

                    var product = filteredProductData.find(p => p.product_id === selectedProductId);
                    if (product) {
                        $('#product_name').text(product.product_name);
                        $('#product_brand').text(product.brand_name);
                        $('#product_category').text(product.category_name);
                        $('#product_year').text(product.model_year);
                        $('#product_price').text('$' + product.list_price.toFixed(2));

                        loadProductImage(product.product_id, product.brand_name);
                    }
                });
            }

            // Load product image
            function loadProductImage(productId, brandName) {
                var extensions = ['.jpg', '.jpeg', '.png', '.gif', '.webp'];
                var imagePaths = [];

                // Try product ID based images first
                extensions.forEach(function(ext) {
                    imagePaths.push('/Content/Images/' + productId + ext);
                });

                // Try product name variations
                var product = filteredProductData.find(p => p.product_id === productId);
                if (product && product.product_name) {
                    var productNameClean = product.product_name.replace(/[^a-zA-Z0-9]/g, '_');
                    extensions.forEach(function(ext) {
                        imagePaths.push('/Content/Images/' + productNameClean + ext);
                    });
                    var productNameNoSpaces = product.product_name.replace(/\s+/g, '');
                    extensions.forEach(function(ext) {
                        imagePaths.push('/Content/Images/' + productNameNoSpaces + ext);
                    });
                }

                // Try brand name based images
                if (brandName) {
                    extensions.forEach(function(ext) {
                        imagePaths.push('/Content/Images/' + brandName.replace(/\s+/g, '_') + ext);
                        imagePaths.push('/Content/Images/' + brandName.replace(/\s+/g, '') + ext);
                        imagePaths.push('/Content/Images/' + brandName.toLowerCase().replace(/\s+/g, '_') + ext);
                    });
                }

                // Try generic bicycle image
                extensions.forEach(function(ext) {
                    imagePaths.push('/Content/Images/bicycle' + ext);
                    imagePaths.push('/Content/Images/bike' + ext);
                    imagePaths.push('/Content/Images/default' + ext);
                });

                tryLoadImage(imagePaths, 0);
            }

            // Recursively try to load images
            function tryLoadImage(paths, index) {
                if (index >= paths.length) {
                    $('#productImageContainer').html('<span class="placeholder-text">No image available</span>');
                    return;
                }

                var img = new Image();
                img.onload = function() {
                    $('#productImageContainer').html('<img src="' + paths[index] + '" alt="Product Image" style="max-width: 100%; max-height: 100%; object-fit: contain;" />');
                };
                img.onerror = function() {
                    tryLoadImage(paths, index + 1);
                };
                img.src = paths[index];
            }

            // Filter products
            function filterProducts() {
                var brandId = $('#productBrandFilter').val();
                var categoryId = $('#productCategoryFilter').val();

                filteredProductData = productData.filter(function(product) {
                    var matchBrand = !brandId || product.brand_id == brandId;
                    var matchCategory = !categoryId || product.category_id == categoryId;
                    return matchBrand && matchCategory;
                });

                productCurrentPage = 1;
                displayProductList(1);
            }

            // Initialize lists
            displayStaffList(1);
            displayCustomerList(1);
            displayProductList(1);

            // Create Staff
            $('#createStaffBtn').click(function() {
                // Clear form
                $('#modal_staff_first_name').val('');
                $('#modal_staff_last_name').val('');
                $('#modal_staff_email').val('');
                $('#modal_staff_phone').val('');
                $('#modal_staff_active').val('1');
                $('#modal_staff_store').val($('#modal_staff_store option:first').val());
                $('#modal_staff_manager').val('');

                var staffModal = new bootstrap.Modal(document.getElementById('staffModal'));
                staffModal.show();
            });

            $('#saveStaffBtn').click(function() {
                var firstName = $('#modal_staff_first_name').val().trim();
                var lastName = $('#modal_staff_last_name').val().trim();
                var email = $('#modal_staff_email').val().trim();

                if (!firstName || !lastName || !email) {
                    alert('Please fill in all required fields (First Name, Last Name, Email)');
                    return;
                }

                var data = {
                    first_name: firstName,
                    last_name: lastName,
                    email: email,
                    phone: $('#modal_staff_phone').val(),
                    active: $('#modal_staff_active').val(),
                    store_id: $('#modal_staff_store').val(),
                    manager_id: $('#modal_staff_manager').val() || null,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                };

                $.ajax({
                    url: '@Url.Action("CreateStaff", "Home")',
                    type: 'POST',
                    data: data,
                    success: function(response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert('Error: ' + error);
                    }
                });
            });

            // Create Customer
            $('#createCustomerBtn').click(function() {
                // Clear form
                $('#modal_customer_first_name').val('');
                $('#modal_customer_last_name').val('');
                $('#modal_customer_email').val('');
                $('#modal_customer_phone').val('');
                $('#modal_customer_street').val('');
                $('#modal_customer_city').val('');
                $('#modal_customer_state').val('');
                $('#modal_customer_zip').val('');

                var customerModal = new bootstrap.Modal(document.getElementById('customerModal'));
                customerModal.show();
            });

            $('#saveCustomerBtn').click(function() {
                var firstName = $('#modal_customer_first_name').val().trim();
                var lastName = $('#modal_customer_last_name').val().trim();
                var email = $('#modal_customer_email').val().trim();

                if (!firstName || !lastName || !email) {
                    alert('Please fill in all required fields (First Name, Last Name, Email)');
                    return;
                }

                var data = {
                    first_name: firstName,
                    last_name: lastName,
                    email: email,
                    phone: $('#modal_customer_phone').val(),
                    street: $('#modal_customer_street').val(),
                    city: $('#modal_customer_city').val(),
                    state: $('#modal_customer_state').val(),
                    zip_code: $('#modal_customer_zip').val(),
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                };

                $.ajax({
                    url: '@Url.Action("CreateCustomer", "Home")',
                    type: 'POST',
                    data: data,
                    success: function(response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert('Error: ' + error);
                    }
                });
            });

            // Product filtering
            $('#productBrandFilter, #productCategoryFilter').change(filterProducts);
        });
    </script>
}